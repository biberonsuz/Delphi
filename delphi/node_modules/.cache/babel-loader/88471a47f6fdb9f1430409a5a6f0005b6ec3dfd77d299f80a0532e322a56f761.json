{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nconst useTypewriter = (text, speed = 250) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState(\"\");\n  useEffect(() => {\n    setDisplayedText(\"\");\n    const words = text.split(\" \");\n    let accumulatedText = \"\";\n    words.forEach((word, i) => {\n      setTimeout(() => {\n        accumulatedText += accumulatedText ? ` ${word}` : word;\n        setDisplayedText(accumulatedText);\n      }, i * speed);\n    });\n    return () => {\n      setDisplayedText(\"\");\n    };\n  }, [text, speed]);\n  return displayedText;\n};\n_s(useTypewriter, \"Jd13zeE1AOcNtwxOaM+TQzFRVsM=\");\nexport default useTypewriter;","map":{"version":3,"names":["useState","useEffect","useRef","useTypewriter","text","speed","_s","displayedText","setDisplayedText","words","split","accumulatedText","forEach","word","i","setTimeout"],"sources":["/Users/pinarkazak/Repos/Delphi/delphi/src/hooks/useTypewriter.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react'\n\nconst useTypewriter = (text, speed = 250) => {\n  const [displayedText, setDisplayedText] = useState(\"\")\n\n\n  useEffect(() => {\n    setDisplayedText(\"\")\n    const words = text.split(\" \")\n    let accumulatedText = \"\"\n\n    words.forEach((word, i) => {\n      setTimeout(() => {\n        accumulatedText += (accumulatedText ? ` ${word}` : word)\n        setDisplayedText(accumulatedText)\n      }, i * speed)\n    })\n\n    return () => {\n      setDisplayedText(\"\")\n    }\n  }, [text, speed])\n\n  return displayedText\n}\n\nexport default useTypewriter\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEnD,MAAMC,aAAa,GAAGA,CAACC,IAAI,EAAEC,KAAK,GAAG,GAAG,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAGtDC,SAAS,CAAC,MAAM;IACdO,gBAAgB,CAAC,EAAE,CAAC;IACpB,MAAMC,KAAK,GAAGL,IAAI,CAACM,KAAK,CAAC,GAAG,CAAC;IAC7B,IAAIC,eAAe,GAAG,EAAE;IAExBF,KAAK,CAACG,OAAO,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;MACzBC,UAAU,CAAC,MAAM;QACfJ,eAAe,IAAKA,eAAe,GAAG,IAAIE,IAAI,EAAE,GAAGA,IAAK;QACxDL,gBAAgB,CAACG,eAAe,CAAC;MACnC,CAAC,EAAEG,CAAC,GAAGT,KAAK,CAAC;IACf,CAAC,CAAC;IAEF,OAAO,MAAM;MACXG,gBAAgB,CAAC,EAAE,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,CAACJ,IAAI,EAAEC,KAAK,CAAC,CAAC;EAEjB,OAAOE,aAAa;AACtB,CAAC;AAAAD,EAAA,CAtBKH,aAAa;AAwBnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}