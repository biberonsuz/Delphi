{"ast":null,"code":"var _jsxFileName = \"/Users/pinarkazak/Repos/Delphi/delphi/src/components/Message.js\",\n  _s = $RefreshSig$();\nimport ReactMarkdown from 'react-markdown';\nimport useTypewriter from '../hooks/useTypewriter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = ({\n  text,\n  sender\n}) => {\n  _s();\n  const isUser = sender === \"user\";\n  const displayedText = isUser ? text : useTypewriter(text); // Typing effect only for bot messages\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex max-w-4xl mx-auto ${isUser ? 'justify-end' : 'justify-start'} mb-4 inline`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `px-4 py-2 text inline ${isUser ? 'border rounded-3xl max-w-md border-indigo-500 text-indigo-500' : 'max-w-full text-gray-700 border-gray-700'}`,\n      children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        className: \"markdown-content space-y-4 inline\",\n        children: displayedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .markdown-content p {\n            display:inline;\n          }\n          .markdown-content ul {\n            background: #f9fafb;\n            padding:1rem 1.25rem;\n            border-radius: 1rem;\n            margin: 1rem 0;\n          }\n          .markdown-content li {\n            padding-bottom:1rem;\n          }\n          .markdown-content pre {\n            background: #f9fafb;\n            padding:1rem 1.25rem;\n            border-radius: 1rem;\n            overflow-x:scroll;\n            margin: 1rem 0;\n            border: 1px solid #e5e7eb;\n          }\n          .markdown-content code {\n            font-family:Menlo;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(Message, \"D5KSthBu+ymIzYyxcdNy+dpobsg=\", false, function () {\n  return [useTypewriter];\n});\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["ReactMarkdown","useTypewriter","jsxDEV","_jsxDEV","Message","text","sender","_s","isUser","displayedText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pinarkazak/Repos/Delphi/delphi/src/components/Message.js"],"sourcesContent":["import ReactMarkdown from 'react-markdown'\nimport useTypewriter from '../hooks/useTypewriter'\n\nconst Message = ({ text, sender }) => {\n  const isUser = sender === \"user\"\n  const displayedText = isUser ? text : useTypewriter(text) // Typing effect only for bot messages\n\n  return (\n    <div className={`flex max-w-4xl mx-auto ${isUser ? 'justify-end' : 'justify-start'} mb-4 inline`}>\n      <div\n        className={`px-4 py-2 text inline ${\n          isUser ? 'border rounded-3xl max-w-md border-indigo-500 text-indigo-500' : 'max-w-full text-gray-700 border-gray-700'\n        }`}\n      >\n        <ReactMarkdown className=\"markdown-content space-y-4 inline\">{displayedText}</ReactMarkdown>\n      </div>\n      <style>\n        {`\n          .markdown-content p {\n            display:inline;\n          }\n          .markdown-content ul {\n            background: #f9fafb;\n            padding:1rem 1.25rem;\n            border-radius: 1rem;\n            margin: 1rem 0;\n          }\n          .markdown-content li {\n            padding-bottom:1rem;\n          }\n          .markdown-content pre {\n            background: #f9fafb;\n            padding:1rem 1.25rem;\n            border-radius: 1rem;\n            overflow-x:scroll;\n            margin: 1rem 0;\n            border: 1px solid #e5e7eb;\n          }\n          .markdown-content code {\n            font-family:Menlo;\n          }\n        `}\n      </style>\n    </div>\n  )\n}\n\nexport default Message\n"],"mappings":";;AAAA,OAAOA,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,aAAa,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,OAAO,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,MAAM,GAAGF,MAAM,KAAK,MAAM;EAChC,MAAMG,aAAa,GAAGD,MAAM,GAAGH,IAAI,GAAGJ,aAAa,CAACI,IAAI,CAAC,EAAC;;EAE1D,oBACEF,OAAA;IAAKO,SAAS,EAAE,0BAA0BF,MAAM,GAAG,aAAa,GAAG,eAAe,cAAe;IAAAG,QAAA,gBAC/FR,OAAA;MACEO,SAAS,EAAE,yBACTF,MAAM,GAAG,+DAA+D,GAAG,0CAA0C,EACpH;MAAAG,QAAA,eAEHR,OAAA,CAACH,aAAa;QAACU,SAAS,EAAC,mCAAmC;QAAAC,QAAA,EAAEF;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzF,CAAC,eACNZ,OAAA;MAAAQ,QAAA,EACG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAR,EAAA,CA1CKH,OAAO;EAAA,QAE2BH,aAAa;AAAA;AAAAe,EAAA,GAF/CZ,OAAO;AA4Cb,eAAeA,OAAO;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}