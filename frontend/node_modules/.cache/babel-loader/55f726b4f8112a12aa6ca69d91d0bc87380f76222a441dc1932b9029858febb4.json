{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useTypewriter = (text, speed = 50) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState(\"\");\n  useEffect(() => {\n    setDisplayedText(\"\");\n    let index = 0;\n    const interval = setInterval(() => {\n      if (index < text.length) {\n        setDisplayedText(prev => prev + text.charAt(index));\n        index += 1;\n      } else {\n        clearInterval(interval);\n      }\n    }, speed);\n    return () => clearInterval(interval);\n  }, [text, speed]);\n  return displayedText;\n};\n_s(useTypewriter, \"Jd13zeE1AOcNtwxOaM+TQzFRVsM=\");\nexport default useTypewriter;","map":{"version":3,"names":["useState","useEffect","useTypewriter","text","speed","_s","displayedText","setDisplayedText","index","interval","setInterval","length","prev","charAt","clearInterval"],"sources":["/Users/pinarkazak/Repos/Delphi/delphi/src/hooks/useTypewriter.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nconst useTypewriter = (text, speed = 50) => {\n  const [displayedText, setDisplayedText] = useState(\"\")\n\n  useEffect(() => {\n    setDisplayedText(\"\")\n\n    let index = 0\n    const interval = setInterval(() => {\n      if (index < text.length) {\n        setDisplayedText((prev) => prev + text.charAt(index))\n        index += 1\n      } else {\n        clearInterval(interval)\n      }\n    }, speed)\n\n    return () => clearInterval(interval)\n  }, [text, speed])\n\n  return displayedText\n}\n\nexport default useTypewriter\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,aAAa,GAAGA,CAACC,IAAI,EAAEC,KAAK,GAAG,EAAE,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdM,gBAAgB,CAAC,EAAE,CAAC;IAEpB,IAAIC,KAAK,GAAG,CAAC;IACb,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIF,KAAK,GAAGL,IAAI,CAACQ,MAAM,EAAE;QACvBJ,gBAAgB,CAAEK,IAAI,IAAKA,IAAI,GAAGT,IAAI,CAACU,MAAM,CAACL,KAAK,CAAC,CAAC;QACrDA,KAAK,IAAI,CAAC;MACZ,CAAC,MAAM;QACLM,aAAa,CAACL,QAAQ,CAAC;MACzB;IACF,CAAC,EAAEL,KAAK,CAAC;IAET,OAAO,MAAMU,aAAa,CAACL,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACN,IAAI,EAAEC,KAAK,CAAC,CAAC;EAEjB,OAAOE,aAAa;AACtB,CAAC;AAAAD,EAAA,CApBKH,aAAa;AAsBnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}