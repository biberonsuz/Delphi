{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useTypewriter = (text, speed = 50) => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  useEffect(() => {\n    let i = 0;\n    const typingInterval = setInterval(() => {\n      if (i < text.length) {\n        setDisplayText(prevText => prevText + text.charAt(i));\n        i++;\n      } else {\n        clearInterval(typingInterval);\n      }\n    }, speed);\n    return () => {\n      clearInterval(typingInterval);\n    };\n  }, [text, speed]);\n  return displayText;\n};\n_s(useTypewriter, \"Z72AqRalvcuvuUyHd5OLwsN/cpk=\");","map":{"version":3,"names":["useState","useEffect","useTypewriter","text","speed","_s","displayText","setDisplayText","i","typingInterval","setInterval","length","prevText","charAt","clearInterval"],"sources":["/Users/pinarkazak/Repos/Delphi/delphi/src/hooks/useTypewriter.js"],"sourcesContent":["import  { useState, useEffect } from 'react';\n\nconst useTypewriter = (text, speed = 50) => {\n  const [displayText, setDisplayText] = useState('');\n\n  useEffect(() => {\n    let i = 0;\n    const typingInterval = setInterval(() => {\n      if (i < text.length) {\n        setDisplayText(prevText => prevText + text.charAt(i));\n        i++;\n      } else {\n        clearInterval(typingInterval);\n      }\n    }, speed);\n\n    return () => {\n      clearInterval(typingInterval);\n    };\n  }, [text, speed]);\n\n  return displayText;\n};"],"mappings":";AAAA,SAAUA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE5C,MAAMC,aAAa,GAAGA,CAACC,IAAI,EAAEC,KAAK,GAAG,EAAE,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,IAAIO,CAAC,GAAG,CAAC;IACT,MAAMC,cAAc,GAAGC,WAAW,CAAC,MAAM;MACvC,IAAIF,CAAC,GAAGL,IAAI,CAACQ,MAAM,EAAE;QACnBJ,cAAc,CAACK,QAAQ,IAAIA,QAAQ,GAAGT,IAAI,CAACU,MAAM,CAACL,CAAC,CAAC,CAAC;QACrDA,CAAC,EAAE;MACL,CAAC,MAAM;QACLM,aAAa,CAACL,cAAc,CAAC;MAC/B;IACF,CAAC,EAAEL,KAAK,CAAC;IAET,OAAO,MAAM;MACXU,aAAa,CAACL,cAAc,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,CAACN,IAAI,EAAEC,KAAK,CAAC,CAAC;EAEjB,OAAOE,WAAW;AACpB,CAAC;AAACD,EAAA,CApBIH,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}