{"ast":null,"code":"var _jsxFileName = \"/Users/pinarkazak/Repos/Delphi/delphi/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Message from './Message';\nimport MessageInput from './MessageInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  selectedBook\n}) => {\n  _s();\n  const initMessage = `Hi, I am Delphi. What would you like to know about ${selectedBook.title} by ${selectedBook.author}?`;\n  const [messages, setMessages] = useState([{\n    text: initMessage,\n    sender: \"bot\"\n  }]);\n\n  // Function to send the message to the server and handle the response\n  const sendMessageToServer = async message => {\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      const data = await response.json();\n      return data.reply;\n    } catch (error) {\n      console.error('Error sending message to server:', error);\n      return \"Sorry, I couldn't process your request.\";\n    }\n  };\n  const addMessage = async message => {\n    // Add user's message\n    setMessages([...messages, {\n      text: message,\n      sender: \"user\"\n    }]);\n\n    // Send the message to the server and get the response\n    const botReply = await sendMessageToServer(message);\n\n    // Add bot's reply\n    setMessages(prevMessages => [...prevMessages, {\n      text: botReply,\n      sender: \"bot\"\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col grow h-dvh mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto bg-gray-10 p-4\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        text: msg.text,\n        sender: msg.sender\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      onSend: addMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"KzFrUEwpxJ79/IYZl0zN7zgstG8=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","Message","MessageInput","jsxDEV","_jsxDEV","Chat","selectedBook","_s","initMessage","title","author","messages","setMessages","text","sender","sendMessageToServer","message","response","fetch","method","headers","body","JSON","stringify","data","json","reply","error","console","addMessage","botReply","prevMessages","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","onSend","_c","$RefreshReg$"],"sources":["/Users/pinarkazak/Repos/Delphi/delphi/src/components/Chat.js"],"sourcesContent":["import { useState } from 'react';\nimport Message from './Message';\nimport MessageInput from './MessageInput';\n\nconst Chat = ({ selectedBook }) => {\n  const initMessage = `Hi, I am Delphi. What would you like to know about ${selectedBook.title} by ${selectedBook.author}?`;\n\n  const [messages, setMessages] = useState([\n    { text: initMessage, sender: \"bot\" }\n  ]);\n\n  // Function to send the message to the server and handle the response\n  const sendMessageToServer = async (message) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message }),\n      });\n\n      const data = await response.json();\n      return data.reply;\n    } catch (error) {\n      console.error('Error sending message to server:', error);\n      return \"Sorry, I couldn't process your request.\";\n    }\n  };\n\n  const addMessage = async (message) => {\n    // Add user's message\n    setMessages([...messages, { text: message, sender: \"user\" }]);\n\n    // Send the message to the server and get the response\n    const botReply = await sendMessageToServer(message);\n\n    // Add bot's reply\n    setMessages((prevMessages) => [\n      ...prevMessages,\n      { text: botReply, sender: \"bot\" }\n    ]);\n  };\n\n  return (\n    <div className=\"flex flex-col grow h-dvh mx-auto\">\n      <div className=\"flex-1 overflow-y-auto bg-gray-10 p-4\">\n        {messages.map((msg, index) => (\n          <Message key={index} text={msg.text} sender={msg.sender} />\n        ))}\n      </div>\n\n      <MessageInput onSend={addMessage} />\n    </div>\n  );\n};\n\nexport default Chat;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAMC,WAAW,GAAG,sDAAsDF,YAAY,CAACG,KAAK,OAAOH,YAAY,CAACI,MAAM,GAAG;EAEzH,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,CACvC;IAAEa,IAAI,EAAEL,WAAW;IAAEM,MAAM,EAAE;EAAM,CAAC,CACrC,CAAC;;EAEF;EACA,MAAMC,mBAAmB,GAAG,MAAOC,OAAO,IAAK;IAC7C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAQ,CAAC;MAClC,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI,CAACE,KAAK;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,OAAO,yCAAyC;IAClD;EACF,CAAC;EAED,MAAME,UAAU,GAAG,MAAOb,OAAO,IAAK;IACpC;IACAJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEE,IAAI,EAAEG,OAAO;MAAEF,MAAM,EAAE;IAAO,CAAC,CAAC,CAAC;;IAE7D;IACA,MAAMgB,QAAQ,GAAG,MAAMf,mBAAmB,CAACC,OAAO,CAAC;;IAEnD;IACAJ,WAAW,CAAEmB,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;MAAElB,IAAI,EAAEiB,QAAQ;MAAEhB,MAAM,EAAE;IAAM,CAAC,CAClC,CAAC;EACJ,CAAC;EAED,oBACEV,OAAA;IAAK4B,SAAS,EAAC,kCAAkC;IAAAC,QAAA,gBAC/C7B,OAAA;MAAK4B,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EACnDtB,QAAQ,CAACuB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBhC,OAAA,CAACH,OAAO;QAAaY,IAAI,EAAEsB,GAAG,CAACtB,IAAK;QAACC,MAAM,EAAEqB,GAAG,CAACrB;MAAO,GAA1CsB,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuC,CAC3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENpC,OAAA,CAACF,YAAY;MAACuC,MAAM,EAAEZ;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACjC,EAAA,CAnDIF,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AAqDV,eAAeA,IAAI;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}