{"ast":null,"code":"var _jsxFileName = \"/Users/pinarkazak/Repos/Delphi/delphi/src/SignUpView.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUp() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:5000/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await response.json();\n    if (response.ok) {\n      alert('User registered successfully');\n    } else {\n      alert(`Error: ${data.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: formData.username,\n      onChange: handleChange,\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: formData.email,\n      onChange: handleChange,\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: formData.password,\n      onChange: handleChange,\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"f9N0QEmAPs7qiUPvbYdzrShQg0o=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SignUp","_s","formData","setFormData","username","email","password","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","message","onSubmit","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pinarkazak/Repos/Delphi/delphi/src/SignUpView.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction SignUp() {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const response = await fetch('http://localhost:5000/auth/register', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(formData),\n    });\n\n    const data = await response.json();\n    if (response.ok) {\n      alert('User registered successfully');\n    } else {\n      alert(`Error: ${data.message}`);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} placeholder=\"Username\" />\n      <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} placeholder=\"Email\" />\n      <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} placeholder=\"Password\" />\n      <button type=\"submit\">Sign Up</button>\n    </form>\n  );\n}\n\nexport default SignUp;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BL,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;MAClEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ;IAC/B,CAAC,CAAC;IAEF,MAAMmB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACfC,KAAK,CAAC,8BAA8B,CAAC;IACvC,CAAC,MAAM;MACLA,KAAK,CAAC,UAAUH,IAAI,CAACI,OAAO,EAAE,CAAC;IACjC;EACF,CAAC;EAED,oBACE1B,OAAA;IAAM2B,QAAQ,EAAEd,YAAa;IAAAe,QAAA,gBAC3B5B,OAAA;MAAO6B,IAAI,EAAC,MAAM;MAAClB,IAAI,EAAC,UAAU;MAACC,KAAK,EAAET,QAAQ,CAACE,QAAS;MAACyB,QAAQ,EAAEtB,YAAa;MAACuB,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9GnC,OAAA;MAAO6B,IAAI,EAAC,OAAO;MAAClB,IAAI,EAAC,OAAO;MAACC,KAAK,EAAET,QAAQ,CAACG,KAAM;MAACwB,QAAQ,EAAEtB,YAAa;MAACuB,WAAW,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtGnC,OAAA;MAAO6B,IAAI,EAAC,UAAU;MAAClB,IAAI,EAAC,UAAU;MAACC,KAAK,EAAET,QAAQ,CAACI,QAAS;MAACuB,QAAQ,EAAEtB,YAAa;MAACuB,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClHnC,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEX;AAACjC,EAAA,CApCQD,MAAM;AAAAmC,EAAA,GAANnC,MAAM;AAsCf,eAAeA,MAAM;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}